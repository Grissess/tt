/* ttr.tt -- An implemention of TTR in TT */
/* The bootstrap translator (and thus grammar) is in ttr.py */
/* This is expected to operate on a ctok tree; its output is a TT tree */

/* Atoms and MatchPoints */
<s1>[string[<x>]] -> <s1>[Atom[<x>]];
<s1>[oper['<'], ident[<x>], oper['>']] -> <s1>[MatchPoint[<x>]];
<s1>[oper['<'], oper['>']] -> <s1>[MatchPoint['']];

/* Children (exhaustively) */
/* initiators */
<s1>[oper['['], Atom[<x>]] -> <s1>[Child[Atom[<x>]]];
<s1>[oper['['], MatchPoint[<x>]] -> <s1>[Child[MatchPoint[<x>]]];
<s1>[oper['['], Group[<x>, <y>]] -> <s1>[Child[Group[<x>, <y>]]];
<s1>[oper['['], Sequence[<x>, <y>]] -> <s1>[Child[Sequence[<x>, <y>]]];
/* terminators */
<s1>[Child[<a>], oper[']']] -> <s1>[Children[Child[<a>]]];
<s1>[Child[<a>, <b>], oper[']']] -> <s1>[Children[Child[<a>, <b>]]];
/* continuation */
<s1>[Child[<a>], oper[','], Atom[<x>]] -> <s1>[Child[<a>, Atom[<x>]]];
<s1>[Child[<a>], oper[','], MatchPoint[<x>]] -> <s1>[Child[<a>, MatchPoint[<x>]]];
<s1>[Child[<a>], oper[','], Group[<x>, <y>]] -> <s1>[Child[<a>, Group[<x>, <y>]]];
<s1>[Child[<a>], oper[','], Sequence[<x>, <y>]] -> <s1>[Child[<a>, Sequence[<x>, <y>]]];
<s1>[Child[<a>, <b>], oper[','], Atom[<x>]] -> <s1>[Child[Child[<a>, <b>], Atom[<x>]]];
<s1>[Child[<a>, <b>], oper[','], MatchPoint[<x>]] -> <s1>[Child[Child[<a>, <b>], MatchPoint[<x>]]];
<s1>[Child[<a>, <b>], oper[','], Group[<x>, <y>]] -> <s1>[Child[Child[<a>, <b>], Group[<x>, <y>]]];
<s1>[Child[<a>, <b>], oper[','], Sequence[<x>, <y>]] -> <s1>[Child[Child[<a>, <b>], Sequence[<x>, <y>]]];

/* Groups and Sequences */
<s1>[Atom[<x>], Children[<y>]] -> <s1>[Group[<x>, Children[<y>]]];
<s1>[ident[<x>], Children[<y>]] -> <s1>[Group[<x>, Children[<y>]]];
<s1>[MatchPoint[<x>], Children[<y>]] -> <s1>[Sequence[<x>, Children[<y>]]];

/* Rules */
<s1>[Atom[<x>], oper['-'], oper['>'], Atom[<a>]] -> <s1>[Rule[Atom[<x>], Atom[<a>]]];
<s1>[Atom[<x>], oper['-'], oper['>'], Group[<a>, <b>]] -> <s1>[Rule[Atom[<x>], Group[<a>, <b>]]];
<s1>[Group[<x>, <y>], oper['-'], oper['>'], Atom[<a>]] -> <s1>[Rule[Group[<x>, <y>], Atom[<a>]]];
<s1>[Group[<x>, <y>], oper['-'], oper['>'], Group[<a>, <b>]] -> <s1>[Rule[Group[<x>, <y>], Group[<a>, <b>]]];
<s1>[Sequence[<x>, <y>], oper['-'], oper['>'], Sequence[<a>, <b>]] -> <s1>[Rule[Sequence[<x>, <y>], Sequence[<a>, <b>]]];

/* Ruleset */
<s1>[Rule[<x>, <y>], oper[';']] -> <s1>[RuleSet[Rules[Rule[<x>, <y>]]]];
<s1>[RuleSet[Rules[<a>]], Rule[<x>, <y>], oper[';']] -> <s1>[RuleSet[Rules[<a>, Rule[<x>, <y>]]]];
<s1>[RuleSet[Rules[<a>, <b>]], Rule[<x>, <y>], oper[';']] -> <s1>[RuleSet[Rules[Rules[<a>, <b>], Rule[<x>, <y>]]]];
